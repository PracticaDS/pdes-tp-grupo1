{"version":3,"sources":["actions/game.js","model/material.js","model/modelUpdate.js","model/machine.js","components/MachineToolbox.js","containers/MachineToolbox.jsx","components/Machine.js","components/FactoryBlock.js","containers/FactoryBlock.js","components/Factory.js","containers/Factory.js","components/DetailsToolBox.js","containers/DetailsToolBox.js","containers/Money.js","components/Money.js","App.js","serviceWorker.js","reducers/game.js","reducers/ui.js","index.js","constants.js"],"names":["constants","require","Material","name","Object","classCallCheck","this","price","createClass","key","value","type","IronMaterial","DiamondMaterial","GoldMaterial","_Material","possibleConstructorReturn","getPrototypeOf","call","inherits","LiquidIronMaterial","_Material2","_Material3","LiquidDiamondMaterial","_Material4","_Material5","LiquidGoldMaterial","_Material6","Update","machineId","id","machine","clone","CleanUpdate","_Update","apply","arguments","material","TransportUpdate","_Update2","_this","BaseMachine","orientation","assign","create","DOWN","RIGHT","UP","LEFT","dirs","nextDir","indexOf","StarterMachine","SellerMachine","TransporterMachine","FurnaceMachine","CrafterMachine","_BaseMachine","production","frequency","counter","getNextMachineId","createMaterial","_BaseMachine2","_this2","profit","_BaseMachine3","_this3","_BaseMachine4","_this4","transform","_BaseMachine5","_this5","classNames","Button","_ref2","onSelected","selection","classes","btn","selected","react_default","a","createElement","className","onClick","createMachine","toLowerCase","connect","state","dispatch","ACTION_SELECTION_NEW","newSelection","_ref","MACHINE_TYPES","map","t","MachineToolbox_Button","Machine","props","concat","onBlankClick","blockId","ACTION_SELECTION_BLANK","blankSelection","onMachineClick","ACTION_SELECTION_MACHINE","machineSelection","block","Machine_Machine","Factory","_React$Component","classFactory","toMove","factory","k","containers_FactoryBlock","React","Component","MachineDetails","money","onDeleted","ACTION_DELETE","deleted","onRotate","ACTION_ROTATE","rotate","onMove","ACTION_MOVE","move","selectMaterial","DetailsToolBox_MachineDetails","App","setInterval","notifyTick","containers_Money","containers_MachineToolbox","containers_Factory","containers_DetailsToolBox","Boolean","window","location","hostname","match","globalUpdates","tick","changes","update","updateMachine","newState","reduce","change","machineTarget","execute","objectSpread","slice","store","createStore","action","newMachine","e","addNewMachine","rotateMachine","deleteMachine","game","initialState","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","FACTORY_HEIGHT","FACTORY_WIDTH","BLOCK_EMPTY","MACHINE_STARTER","MACHINE_SELLER","MACHINE_TRANSPORTER","MACHINE_FURNACE","MACHINE_CRAFTER","STARTER_PRICE","SELLER_PRICE","TRANSPORTER_PRICE","FURNACE_PRICE","CRAFTER_PRICE","_home_travis_build_PracticaDS_pdes_tp_grupo1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array"],"mappings":"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","file":"static/js/main.42500dd1.chunk.js","sourcesContent":["const constants = require('../constants')\n\nexport const newSelection = (machine) => ({\n  type: constants.ACTION_SELECTION_NEW,\n  machine: machine\n})\n\nexport const blankSelection = (blockId) => ({\n  type: constants.ACTION_SELECTION_BLANK,\n  blockId: blockId\n})\n\nexport const machineSelection = (machine) => ({\n  type: constants.ACTION_SELECTION_MACHINE,\n  machine: machine\n})\n\nexport const deleted = (machine) => ({\n  type: constants.ACTION_DELETE,\n  machine\n})\n\nexport const rotate = (machine) => ({\n  type: constants.ACTION_ROTATE,\n  machine\n})\n\nexport const move = (machine) => ({\n  type: constants.ACTION_MOVE,\n  machine\n})\n\nexport const tick = () => ({ type: 'TICK' })\n","export class Material {\n  constructor (name) {\n    this.name = name\n    this.price = 100\n  }\n\n  static createMaterial (type) {\n    switch (type) {\n      case 'IRON': return new IronMaterial()\n      case 'DIAMOND': return new DiamondMaterial()\n      case 'GOLD': return new GoldMaterial()\n      default:\n    }\n  }\n\n  transform () {\n    return this\n  }\n}\n\nexport class IronMaterial extends Material {\n  constructor () {\n    super('IRON')\n  }\n\n  transform () {\n    return new LiquidIronMaterial()\n  }\n}\n\nexport class LiquidIronMaterial extends Material {\n  constructor () {\n    super('LIQUID_IRON')\n  }\n}\n\nexport class DiamondMaterial extends Material {\n  constructor () {\n    super('DIAMOND')\n  }\n\n  transform () {\n    return new LiquidDiamondMaterial()\n  }\n}\n\nexport class LiquidDiamondMaterial extends Material {\n  constructor () {\n    super('LIQUID_DIAMOND')\n  }\n}\n\nexport class GoldMaterial extends Material {\n  constructor () {\n    super('GOLD')\n  }\n\n  transform () {\n    return new LiquidGoldMaterial()\n  }\n}\n\nexport class LiquidGoldMaterial extends Material {\n  constructor () {\n    super('LIQUID_GOLD')\n  }\n}\n","export class Update {\n  constructor (machineId) {\n    this.id = machineId\n  }\n\n  execute (machine) {\n    return machine.clone()\n  }\n}\n\nexport class CleanUpdate extends Update {\n  execute (machine) {\n    machine.material = null\n    return machine.clone()\n  }\n}\n\nexport class TransportUpdate extends Update {\n  constructor (machineId, material) {\n    super(machineId)\n    this.material = material\n  }\n\n  execute (machine) {\n    machine.material = this.material\n    return machine.clone()\n  }\n}\n","import { Material } from './material'\nimport { TransportUpdate, CleanUpdate } from './modelUpdate'\n\nexport class BaseMachine {\n  constructor (id) {\n    this.id = id\n    this.orientation = 'DOWN'\n    this.material = ''\n    this.price = 100\n  }\n\n  static createMachine (type, id) {\n    switch (type) {\n      case 'STARTER': return new StarterMachine(id)\n      case 'SELLER': return new SellerMachine(id)\n      case 'TRANSPORTER': return new TransporterMachine(id)\n      case 'FURNACE': return new FurnaceMachine(id)\n      case 'CRAFTER': return new CrafterMachine(id)\n      default:\n    }\n  }\n\n  update () {\n    return []\n  }\n\n  clone () {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n  }\n\n  getNextMachineId () {\n    const dirs = { DOWN: 8, RIGHT: 1, UP: -8, LEFT: -1 }\n    return this.id + dirs[this.orientation]\n  }\n\n  rotate () {\n    const dirs = ['DOWN', 'RIGHT', 'UP', 'LEFT']\n    const nextDir = (dirs.indexOf(this.orientation) + 1) % 4\n    this.orientation = dirs[nextDir]\n  }\n}\n\nexport class StarterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'STARTER'\n    this.production = 'IRON'\n    this.frequency = 3\n    this.counter = 0\n  }\n\n  update () {\n    this.counter++\n    if (this.frequency === this.counter) {\n      this.counter = 0\n      return [new TransportUpdate(this.getNextMachineId(), Material.createMaterial(this.production))]\n    }\n\n    return []\n  }\n}\n\nexport class SellerMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'SELLER'\n    this.profit = 0\n  }\n\n  update () {\n    if (this.material) {\n      this.profit = this.material.price\n      return [new CleanUpdate(this.id)]\n    } else {\n      this.profit = 0\n    }\n\n    return []\n  }\n}\n\nexport class TransporterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'TRANSPORTER'\n  }\n\n  update () {\n    return this.material ? [new CleanUpdate(this.id), new TransportUpdate(this.getNextMachineId(), this.material)] : []\n  }\n}\n\nexport class FurnaceMachine extends BaseMachine {\n  constructor () {\n    super()\n    this.name = 'FURNACE'\n  }\n\n  update () {\n    return this.material ? [new CleanUpdate(this.id), new TransportUpdate(this.getNextMachineId(), this.material.transform())] : []\n  }\n}\n\nexport class CrafterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'CRAFTER'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { BaseMachine } from '../model/machine'\n\nimport './MachineToolbox.css'\nimport '../styles/Machine.css'\n\nvar classNames = require('classnames')\nconst constants = require('../constants')\n\nexport const MachineToolbox = ({ onSelected, selection }) => {\n  return (\n    <div className='toolbox'>\n      <h1 className='title'>Máquinas</h1>\n      <div className='items'>\n        {constants.MACHINE_TYPES.map(t => <Button type={t} selection={selection} onSelected={onSelected} />)}\n      </div>\n    </div>\n  )\n}\n\nMachineToolbox.propTypes = {\n  onSelected: PropTypes.func,\n  selection: PropTypes.object\n}\n\nconst Button = ({ type, onSelected, selection }) => {\n  const classes = {\n    btn: true,\n    selected: selection.machine && type === selection.machine.name && selection.type === 'NEW'\n  }\n\n  return (\n    <span className={classNames(classes)} onClick={() => onSelected(BaseMachine.createMachine(type))}>\n      <div className={'machine ' + type.toLowerCase()} />\n    </span>\n  )\n}\n\nButton.propTypes = {\n  onSelected: PropTypes.func,\n  type: PropTypes.string\n}\n","import { connect } from 'react-redux'\nimport { MachineToolbox } from '../components/MachineToolbox'\n\nimport { newSelection } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onSelected: machine => dispatch(newSelection(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(MachineToolbox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/Machine.css'\n\nexport const Machine = (props) => {\n  const showMaterial = () => (\n    props.machine.material ? <div className={`material ${props.machine.material.name.toLowerCase()}`} /> : ''\n  )\n\n  return (\n    <div onClick={props.onClick} className={`machine ${props.machine.name.toLowerCase()} ${props.machine.orientation.toLowerCase()}`} >\n      {showMaterial()}\n    </div>\n  )\n}\n\nMachine.propTypes = {\n  machine: PropTypes.object.isRequired,\n  onClick: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Machine } from './Machine'\n\nvar classNames = require('classnames')\n\nexport const FactoryBlock = (props) => {\n  const classes = {\n    block: true,\n    selected: props.machine && props.selection.machine && props.selection.machine.id === props.machine.id\n  }\n\n  if (props.machine) {\n    return <span className={classNames(classes)}><Machine onClick={() => props.onMachineClick(props.machine)} machine={props.machine} /></span>\n  } else {\n    return <span className={classNames(classes)} onClick={() => props.onBlankClick(props.id)} />\n  }\n}\n\nFactoryBlock.propTypes = {\n  machine: PropTypes.object,\n  selection: PropTypes.object,\n  id: PropTypes.number.isRequired,\n  onBlankClick: PropTypes.func,\n  onMachineClick: PropTypes.func\n}\n","import { connect } from 'react-redux'\nimport { FactoryBlock } from '../components/FactoryBlock'\n\nimport { blankSelection, machineSelection } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onBlankClick: blockId => dispatch(blankSelection(blockId)),\n    onMachineClick: machine => dispatch(machineSelection(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(FactoryBlock)\n","import React from 'react'\nimport FactoryBlock from '../containers/FactoryBlock'\n\nimport './Factory.css'\n\nexport class Factory extends React.Component {\n  render () {\n    var classFactory = 'factory'\n    const toMove = this.props.toMove\n    if (toMove) {\n      classFactory = 'factory factory_disabled'\n    }\n\n    return (\n      <div className={classFactory}>\n        { this.props.factory.map((block, k) => <FactoryBlock machine={block} key={k} id={k} />) }\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { Factory } from '../components/Factory'\n\nconst mapStateToProps = (state) => {\n  return {\n    selected: state.selected,\n    factory: state.factory,\n    toMove: state.toMove\n  }\n}\n\nexport default connect(mapStateToProps, null)(Factory)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/DetailsToolBox.css'\n\nexport const DetailsToolBox = (props) => {\n  const renderButtons = () => {\n    if (props.selection && props.selection.type !== 'NEW') {\n      return (\n        <div className='buttons'>\n          <div className='btn delete' onClick={() => props.onDeleted(props.selection.machine)} />\n          <div className='btn rotate' onClick={() => props.onRotate(props.selection.machine)} />\n          <div className='btn move' onClick={() => props.onMove(props.selection.machine)} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const renderMaterialSelection = () => {\n    if (props.selection && props.selection.machine.production) {\n      return (\n        <div className='buttons-material'>\n          <div className='btn iron' onClick={() => selectMaterial('IRON')} />\n          <div className='btn diamond' onClick={() => selectMaterial('DIAMOND')} />\n          <div className='btn gold' onClick={() => selectMaterial('GOLD')} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const selectMaterial = (material) => (props.selection.machine.production = material)\n\n  return (\n    <div className='details-toolbox'>\n      <h1 className='title'>Edición</h1>\n      <div className='content'>\n        <MachineDetails machine={props.selection.machine} />\n        {renderMaterialSelection()}\n        {renderButtons()}\n      </div>\n    </div>\n  )\n}\n\nDetailsToolBox.propTypes = {\n  selection: PropTypes.object,\n  money: PropTypes.number,\n  onDeleted: PropTypes.func,\n  onRotate: PropTypes.func,\n  onMove: PropTypes.func\n}\n\nconst MachineDetails = (props) => {\n  if (props.machine) {\n    return (\n      <div className='machine-details'>\n        <p>MACHINE: {props.machine.name}</p>\n        {props.machine.frequency ? <p>Frecuencia: {props.machine.frequency}</p> : ''}\n        {props.machine.production ? <p>Producción: {props.machine.production}</p> : ''}\n        <p>Precio: ${props.machine.price}</p>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n","import { connect } from 'react-redux'\nimport { DetailsToolBox } from '../components/DetailsToolBox'\n\nimport { deleted, rotate, move } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onDeleted: (machine) => dispatch(deleted(machine)),\n    onRotate: (machine) => dispatch(rotate(machine)),\n    onMove: (machine) => dispatch(move(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    money: state.money,\n    toMove: state.toMove,\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(DetailsToolBox)\n","import { connect } from 'react-redux'\nimport { Money } from '../components/Money'\n\nimport '../styles/Money.css'\n\nconst mapStateToProps = (state) => {\n  return {\n    money: state.money\n  }\n}\n\nexport default connect(mapStateToProps)(Money)\n","import React from 'react'\n\nexport const Money = ({ money }) => {\n  return (\n    <div className='money'>Dinero: ${money} </div>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\n\nimport { tick } from './actions/game'\nimport MachineToolbox from './containers/MachineToolbox'\nimport Factory from './containers/Factory'\nimport DetailsToolBox from './containers/DetailsToolBox'\nimport Money from './containers/Money'\n\nclass App extends React.Component {\n  componentDidMount () {\n    setInterval(this.props.notifyTick, 1000)\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='app-title'>\n            Revolución Industrial\n          </h1>\n          <Money />\n        </header>\n        <body>\n          <MachineToolbox />\n          <Factory />\n          <DetailsToolBox />\n        </body>\n      </div>\n    )\n  }\n}\n\nconst mapActionsToProps = dispatch => {\n  return {\n    notifyTick: () => dispatch(tick())\n  }\n}\n\nexport default connect(null, mapActionsToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var globalUpdates = []\n\nconst updateMachine = (machine, id) => {\n  const changes = machine.update()\n  globalUpdates = globalUpdates.concat(changes)\n}\n\nconst apply = (state, update) => {\n  const machineTarget = state.factory[update.id]\n  if (!machineTarget) {\n    return state\n  }\n\n  if (machineTarget.profit) {\n    state.money = state.money + machineTarget.profit\n  }\n\n  state.factory[update.id] = update.execute(machineTarget)\n\n  return state\n}\n\nconst tick = (state) => {\n  state.factory.map((machine, id) => machine ? updateMachine(machine, id) : null)\n  const newState = globalUpdates.reduce((state, change) => apply(state, change), state)\n  globalUpdates = []\n\n  return {\n    ...state,\n    factory: newState.factory.slice(0)\n  }\n}\n\nexport const game = (state, action) => {\n  return tick(state)\n}\n","import { game } from './game'\n\nconst constants = require('../constants')\n\nconst addNewMachine = (state, blockId) => {\n  if (state.selected.type !== 'NEW') {\n    return state\n  }\n  const newMachine = state.selected.machine\n  newMachine.id = blockId\n\n  if (newMachine.price > state.money) {\n    return state\n  }\n\n  return {\n    ...state,\n    factory: state.factory.map((e, k) => k === blockId ? newMachine : e),\n    selected: { type: 'MACHINE', machine: newMachine },\n    money: state.money - newMachine.price\n  }\n}\n\nconst rotateMachine = (state, machine) => {\n  machine.rotate()\n  state.factory[machine.id] = machine.clone()\n\n  return {\n    ...state,\n    factory: state.factory.slice(0)\n  }\n}\n\nconst deleteMachine = (state, machine) => {\n  state.factory[machine.id] = null\n\n  return {\n    ...state,\n    selected: '',\n    factory: state.factory.slice(0)\n  }\n}\n\nexport const ui = (state, action) => {\n  switch (action.type) {\n    case constants.ACTION_SELECTION_NEW:\n      return {\n        ...state,\n        selected: { type: 'NEW', machine: action.machine }\n      }\n    case constants.ACTION_SELECTION_BLANK:\n      return addNewMachine(state, action.blockId)\n    case constants.ACTION_SELECTION_MACHINE:\n      return {\n        ...state,\n        selected: { type: 'MACHINE', machine: action.machine }\n      }\n    case constants.ACTION_ROTATE:\n      return rotateMachine(state, action.machine)\n    case constants.ACTION_DELETE:\n      return deleteMachine(state, action.machine)\n    case 'TICK':\n      return game(state, action)\n    case constants.ACTION_MOVE:\n      return {\n        ...state,\n        toMove: state.toMove\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { initialState } from './constants'\nimport { ui as reducer } from './reducers/ui'\n\nconst store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const FACTORY_HEIGHT = 8\nexport const FACTORY_WIDTH = 8\n\nexport const BLOCK_EMPTY = 'BLOCK_EMPTY'\nexport const MACHINE_STARTER = 'STARTER'\nexport const MACHINE_SELLER = 'SELLER'\nexport const MACHINE_TRANSPORTER = 'TRANSPORTER'\nexport const MACHINE_FURNACE = 'FURNACE'\nexport const MACHINE_CRAFTER = 'CRAFTER'\nexport const MACHINE_TYPES = [MACHINE_STARTER, MACHINE_SELLER, MACHINE_TRANSPORTER, MACHINE_FURNACE, MACHINE_CRAFTER]\n\nexport const ACTION_SELECTION_NEW = 'ACTION_SELECTION_NEW'\nexport const ACTION_SELECTION_BLANK = 'ACTION_SELECTION_BLANK'\nexport const ACTION_SELECTION_MACHINE = 'ACTION_SELECTION_MACHINE'\nexport const ACTION_DELETE = 'ACTION_DELETE'\nexport const ACTION_ROTATE = 'ACTION_ROTATE'\nexport const ACTION_MOVE = 'ACTION_MOVE'\n\nexport const STARTER_PRICE = 100\nexport const SELLER_PRICE = 250\nexport const TRANSPORTER_PRICE = 50\nexport const FURNACE_PRICE = 300\nexport const CRAFTER_PRICE = 200\n\nexport const initialState = {\n  factory: [...Array(FACTORY_HEIGHT * FACTORY_WIDTH)].map(() => null),\n  selected: '',\n  money: 1000\n}\n"],"sourceRoot":""}