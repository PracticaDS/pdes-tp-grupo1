{"version":3,"sources":["constants.js","actions/game.js","components/StarterMachine.js","components/TransporterMachine.js","components/FurnaceMachine.js","components/SellerMachine.js","components/CrafterMachine.js","components/MachineToolbox.js","containers/MachineToolbox.jsx","components/FactoryBlock.js","containers/FactoryBlock.js","components/Factory.js","containers/Factory.js","App.js","serviceWorker.js","reducers/game.js","index.js"],"names":["FACTORY_HEIGHT","FACTORY_WIDTH","BLOCK_EMPTY","BLOCK_STARTER","BLOCK_SELLER","BLOCK_TRANSPORTER","BLOCK_FURNACE","BLOCK_CRAFTER","ACTION_SELECTION","ACTION_ADDNEW","initialState","factory","Object","_home_martin_master_grupo1_pdes_tp_grupo1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","map","type","selected","constants","require","StarterMachine","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","React","Component","TransporterMachine","FurnaceMachine","SellerMachine","CrafterMachine","connect","dispatch","onSelected","machineType","machine","_ref","onClick","StarterMachine_StarterMachine","TransporterMachine_TransporterMachine","CrafterMachine_CrafterMachine","FurnaceMachine_FurnaceMachine","SellerMachine_SellerMachine","FactoryBlock","props","_this","id","renderMachine","blockId","added","Factory","b","k","containers_FactoryBlock","state","App","setInterval","notifyTick","containers_MachineToolbox","containers_Factory","Boolean","window","location","hostname","match","store","createStore","action","objectSpread","e","addNewMachine","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5b30ed8.chunk.js","sourcesContent":["export const FACTORY_HEIGHT = 8\nexport const FACTORY_WIDTH = 8\n\nexport const BLOCK_EMPTY = 'BLOCK_EMPTY'\nexport const BLOCK_STARTER = 'BLOCK_STARTER'\nexport const BLOCK_SELLER = 'BLOCK_SELLER'\nexport const BLOCK_TRANSPORTER = 'BLOCK_TRANSPORTER'\nexport const BLOCK_FURNACE = 'BLOCK_FURNACE'\nexport const BLOCK_CRAFTER = 'BLOCK_CRAFTER'\n\nexport const ACTION_SELECTION = 'ACTION_SELECTION'\nexport const ACTION_ADDNEW = 'ACTION_ADDNEW'\n\nexport const initialState = {\n  factory: [...Array(FACTORY_HEIGHT * FACTORY_WIDTH)].map(() => ({ type: BLOCK_EMPTY })),\n  selected: ''\n}\n","const constants = require('../constants')\n\nexport const selected = (machineType) => ({\n  type: constants.ACTION_SELECTION,\n  machine: machineType\n})\n\nexport const added = (blockId) => ({\n  type: constants.ACTION_ADDNEW,\n  blockId: blockId\n})\n\nexport const tick = () => ({\n  type: 'TICK'\n})\n","import React from 'react'\n\nimport './StarterMachine.css'\n\nexport class StarterMachine extends React.Component {\n  render () {\n    return <div className='starter' />\n  }\n}\n","import React from 'react'\n\nimport './TransporterMachine.css'\n\nexport class TransporterMachine extends React.Component {\n  render () {\n    return <div className='transporter' />\n  }\n}\n","import React from 'react'\n\nimport './FurnaceMachine.css'\n\nexport class FurnaceMachine extends React.Component {\n  render () {\n    return <div className='furnace' />\n  }\n}\n","import React from 'react'\n\nimport './SellerMachine.css'\n\nexport class SellerMachine extends React.Component {\n  render () {\n    return <div className='seller' />\n  }\n}\n","import React from 'react'\n\nimport './CrafterMachine.css'\n\nexport class CrafterMachine extends React.Component {\n  render () {\n    return <div className='crafterMachine' />\n  }\n}\n","import React from 'react'\nimport { StarterMachine } from './StarterMachine'\nimport { TransporterMachine } from './TransporterMachine'\nimport { FurnaceMachine } from './FurnaceMachine'\nimport { SellerMachine } from './SellerMachine'\nimport { CrafterMachine } from './CrafterMachine'\n\nimport './MachineToolbox.css'\n\nconst constants = require('../constants')\n\nexport const MachineToolbox = ({onSelected}) => {\n  return (\n    <div className='toolbox'>\n      <h1 className='title'>MÃ¡quinas</h1>\n      <div className='items'>\n        <span onClick={() => onSelected(constants.BLOCK_STARTER)} ><StarterMachine /></span>\n        <span onClick={() => onSelected(constants.BLOCK_TRANSPORTER)} ><TransporterMachine /></span>\n        <span onClick={() => onSelected(constants.BLOCK_CRAFTER)} ><CrafterMachine /></span>\n        <span onClick={() => onSelected(constants.BLOCK_FURNACE)} ><FurnaceMachine /></span>\n        <span onClick={() => onSelected(constants.BLOCK_SELLER)} ><SellerMachine /></span>\n      </div>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport { MachineToolbox } from '../components/MachineToolbox'\n\nimport { selected } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onSelected: machineType => dispatch(selected(machineType))\n  }\n}\n\nexport default connect(null, mapActionsToProps)(MachineToolbox)","import React from 'react'\nimport { StarterMachine } from './StarterMachine'\nimport { TransporterMachine } from './TransporterMachine'\nimport { FurnaceMachine } from './FurnaceMachine'\nimport { SellerMachine } from './SellerMachine'\nimport { CrafterMachine } from './CrafterMachine'\n\nconst constants = require('../constants')\n\nexport class FactoryBlock extends React.Component {\n  renderMachine () {\n    switch (this.props.type) {\n      case constants.BLOCK_FURNACE:\n        return <FurnaceMachine />\n      case constants.BLOCK_STARTER:\n        return <StarterMachine />\n      case constants.BLOCK_SELLER:\n        return <SellerMachine />\n      case constants.BLOCK_TRANSPORTER:\n        return <TransporterMachine />\n      case constants.BLOCK_CRAFTER:\n        return <CrafterMachine />\n      default:\n        return ''\n    }\n  }\n\n  render () {\n    return (\n      <span className='block' onClick={() => this.props.onClick(this.props.id)}>{this.renderMachine()}</span>\n    )\n  }\n}","import { connect } from 'react-redux'\nimport { FactoryBlock } from '../components/FactoryBlock'\n\nimport { added } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onClick: blockId => dispatch(added(blockId))\n  }\n}\n\nexport default connect(null, mapActionsToProps)(FactoryBlock)\n","import React from 'react'\nimport FactoryBlock from '../containers/FactoryBlock'\n\nimport './Factory.css'\n\nexport class Factory extends React.Component {\n  render () {\n    return (\n      <div className='factory'>\n        { this.props.factory.map((b, k) => <FactoryBlock type={b.type} key={k} id={k} />) }\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { Factory } from '../components/Factory'\n\nconst mapStateToProps = (state) => {\n  return {\n    selected: state.selected,\n    factory: state.factory\n  }\n}\n\nexport default connect(mapStateToProps, null)(Factory)\n","import React from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\n\nimport { tick } from './actions/game'\nimport MachineToolbox from './containers/MachineToolbox'\nimport Factory from './containers/Factory'\n\nclass App extends React.Component {\n  componentDidMount () {\n    setInterval(this.props.notifyTick, 2000)\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <MachineToolbox />\n        <Factory />\n      </div>\n    )\n  }\n}\n\nconst mapActionsToProps = dispatch => {\n  return {\n    notifyTick: () => dispatch(tick())\n  }\n}\n\nexport default connect(null, mapActionsToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const constants = require('../constants')\n\nconst addNewMachine = (state, blockId) => {\n  if (!state.selected) {\n    return state\n  }\n\n  return {\n    factory: state.factory.map((e, k) => k === blockId ? {type: state.selected} : e),\n    selected: ''\n  }\n}\n\nexport const game = (state, action) => {\n  switch (action.type) {\n    case constants.ACTION_SELECTION:\n      return {\n        ...state,\n        selected: action.machine\n      }\n    case constants.ACTION_ADDNEW:\n      return addNewMachine(state, action.blockId)\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { initialState } from './constants'\nimport { game as reducer } from './reducers/game'\n\nconst store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}