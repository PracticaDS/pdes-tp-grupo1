{"version":3,"sources":["actions/game.js","model/material.js","model/modelUpdate.js","model/recipe.js","model/machine.js","components/MachineToolbox.js","containers/MachineToolbox.jsx","components/Machine.js","components/FactoryBlock.js","containers/FactoryBlock.js","components/Factory.js","containers/Factory.js","components/DetailsToolBox.js","containers/DetailsToolBox.js","containers/Money.js","components/Money.js","App.js","serviceWorker.js","reducers/game.js","reducers/ui.js","index.js","constants.js"],"names":["constants","require","Material","name","Object","classCallCheck","this","price","content","createClass","key","value","type","IronMaterial","DiamondMaterial","GoldMaterial","_Material","possibleConstructorReturn","getPrototypeOf","call","inherits","LiquidIronMaterial","_Material2","_Material3","LiquidDiamondMaterial","_Material4","_Material5","LiquidGoldMaterial","_Material6","SwordMaterial","_Material7","_this","TrophyMaterial","_Material8","_this2","Update","machineId","id","machine","clone","TransportUpdate","_Update2","material","push","SwordRecipe","ingredients","materials","filter","mat","includes","length","TrophyRecipe","BaseMachine","orientation","assign","create","DOWN","RIGHT","UP","LEFT","dirs","nextDir","indexOf","StarterMachine","SellerMachine","TransporterMachine","FurnaceMachine","CrafterMachine","_BaseMachine","production","frequency","counter","getNextMachineId","createMaterial","_BaseMachine2","profit","reduce","sum","_BaseMachine3","_this3","_this4","changes","map","_BaseMachine4","_this5","_this6","transform","_BaseMachine5","_this7","recipe","product","craft","classNames","Button","_ref2","onSelected","selection","classes","btn","selected","react_default","a","createElement","className","onClick","createMachine","toLowerCase","connect","state","dispatch","ACTION_SELECTION_NEW","newSelection","_ref","MACHINE_TYPES","t","MachineToolbox_Button","Machine","props","concat","onBlankClick","blockId","ACTION_SELECTION_BLANK","blankSelection","onMachineClick","ACTION_SELECTION_MACHINE","machineSelection","block","Machine_Machine","Factory","_React$Component","apply","arguments","classFactory","toMove","factory","k","containers_FactoryBlock","React","Component","MachineDetails","money","onDeleted","ACTION_DELETE","deleted","onRotate","ACTION_ROTATE","rotate","onMove","ACTION_MOVE","move","selectMaterial","selectRecipe","DetailsToolBox_MachineDetails","App","setInterval","notifyTick","containers_Money","containers_MachineToolbox","containers_Factory","containers_DetailsToolBox","Boolean","window","location","hostname","match","globalUpdates","tick","update","updateMachine","newState","change","machineTarget","execute","objectSpread","slice","store","createStore","action","newMachine","e","addNewMachine","rotateMachine","deleteMachine","game","initialState","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","FACTORY_HEIGHT","FACTORY_WIDTH","BLOCK_EMPTY","MACHINE_STARTER","MACHINE_SELLER","MACHINE_TRANSPORTER","MACHINE_FURNACE","MACHINE_CRAFTER","STARTER_PRICE","SELLER_PRICE","TRANSPORTER_PRICE","FURNACE_PRICE","CRAFTER_PRICE","_home_travis_build_PracticaDS_pdes_tp_grupo1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array"],"mappings":"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","file":"static/js/main.58c6fbd9.chunk.js","sourcesContent":["const constants = require('../constants')\n\nexport const newSelection = (machine) => ({\n  type: constants.ACTION_SELECTION_NEW,\n  machine: machine\n})\n\nexport const blankSelection = (blockId) => ({\n  type: constants.ACTION_SELECTION_BLANK,\n  blockId: blockId\n})\n\nexport const machineSelection = (machine) => ({\n  type: constants.ACTION_SELECTION_MACHINE,\n  machine: machine\n})\n\nexport const deleted = (machine) => ({\n  type: constants.ACTION_DELETE,\n  machine\n})\n\nexport const rotate = (machine) => ({\n  type: constants.ACTION_ROTATE,\n  machine\n})\n\nexport const move = (machine) => ({\n  type: constants.ACTION_MOVE,\n  machine\n})\n\nexport const tick = () => ({ type: 'TICK' })\n","export class Material {\n  constructor (name) {\n    this.name = name\n    this.price = 100\n    this.content = ''\n  }\n\n  static createMaterial (type) {\n    switch (type) {\n      case 'IRON': return new IronMaterial()\n      case 'DIAMOND': return new DiamondMaterial()\n      case 'GOLD': return new GoldMaterial()\n      default:\n    }\n  }\n\n  transform () {\n    return this\n  }\n}\n\nexport class IronMaterial extends Material {\n  constructor () {\n    super('IRON')\n  }\n\n  transform () {\n    return new LiquidIronMaterial()\n  }\n}\n\nexport class LiquidIronMaterial extends Material {\n  constructor () {\n    super('LIQUID_IRON')\n  }\n}\n\nexport class DiamondMaterial extends Material {\n  constructor () {\n    super('DIAMOND')\n  }\n\n  transform () {\n    return new LiquidDiamondMaterial()\n  }\n}\n\nexport class LiquidDiamondMaterial extends Material {\n  constructor () {\n    super('LIQUID_DIAMOND')\n  }\n}\n\nexport class GoldMaterial extends Material {\n  constructor () {\n    super('GOLD')\n  }\n\n  transform () {\n    return new LiquidGoldMaterial()\n  }\n}\n\nexport class LiquidGoldMaterial extends Material {\n  constructor () {\n    super('LIQUID_GOLD')\n  }\n}\n\nexport class SwordMaterial extends Material {\n  constructor () {\n    super('SWORD')\n    this.content = '🗡️'\n  }\n}\n\nexport class TrophyMaterial extends Material {\n  constructor () {\n    super('Trophy')\n    this.content = '🏆'\n  }\n}\n","export class Update {\n  constructor (machineId) {\n    this.id = machineId\n  }\n\n  execute (machine) {\n    return machine.clone()\n  }\n}\n\nexport class CleanUpdate extends Update {\n  execute (machine) {\n    machine.material = []\n    return machine.clone()\n  }\n}\n\nexport class TransportUpdate extends Update {\n  constructor (machineId, material) {\n    super(machineId)\n    this.material = material\n  }\n\n  execute (machine) {\n    machine.material.push(this.material)\n    return machine.clone()\n  }\n}\n","import { SwordMaterial, TrophyMaterial } from './material'\n\nexport class SwordRecipe {\n  constructor () {\n    this.name = 'SWORD'\n    this.ingredients = ['IRON', 'IRON', 'IRON']\n  }\n\n  craft (materials) {\n    const result = materials.filter(mat => this.ingredients.includes(mat.name))\n    if (result.length >= this.ingredients.length) {\n      return new SwordMaterial()\n    }\n  }\n}\n\nexport class TrophyRecipe {\n  constructor () {\n    this.name = 'TROPHY'\n    this.ingredients = ['GOLD', 'GOLD', 'GOLD']\n  }\n\n  craft (materials) {\n    const result = materials.filter(mat => this.ingredients.includes(mat.name))\n    if (result.length >= this.ingredients.length) {\n      return new TrophyMaterial()\n    }\n  }\n}\n","import { Material } from './material'\nimport { Update, TransportUpdate } from './modelUpdate'\nimport { SwordRecipe } from './recipe'\n\nexport class BaseMachine {\n  constructor (id) {\n    this.id = id\n    this.orientation = 'DOWN'\n    this.material = []\n    this.price = 100\n  }\n\n  static createMachine (type, id) {\n    switch (type) {\n      case 'STARTER': return new StarterMachine(id)\n      case 'SELLER': return new SellerMachine(id)\n      case 'TRANSPORTER': return new TransporterMachine(id)\n      case 'FURNACE': return new FurnaceMachine(id)\n      case 'CRAFTER': return new CrafterMachine(id)\n      default:\n    }\n  }\n\n  update () {\n    return []\n  }\n\n  clone () {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n  }\n\n  getNextMachineId () {\n    const dirs = { DOWN: 8, RIGHT: 1, UP: -8, LEFT: -1 }\n    return this.id + dirs[this.orientation]\n  }\n\n  rotate () {\n    const dirs = ['DOWN', 'RIGHT', 'UP', 'LEFT']\n    const nextDir = (dirs.indexOf(this.orientation) + 1) % 4\n    this.orientation = dirs[nextDir]\n  }\n}\n\nexport class StarterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'STARTER'\n    this.production = 'IRON'\n    this.frequency = 3\n    this.counter = 0\n  }\n\n  update () {\n    this.counter++\n    if (this.frequency === this.counter) {\n      this.counter = 0\n      return [new TransportUpdate(this.getNextMachineId(), Material.createMaterial(this.production))]\n    }\n\n    return []\n  }\n}\n\nexport class SellerMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'SELLER'\n    this.profit = 0\n  }\n\n  update () {\n    this.profit = this.material.reduce((sum, material) => (sum + material.price), 0)\n    this.material = []\n    return [new Update(this.id)]\n  }\n}\n\nexport class TransporterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'TRANSPORTER'\n  }\n\n  update () {\n    const changes = []\n    this.material.map(material => {\n      return changes.push(new TransportUpdate(this.getNextMachineId(), material))\n    })\n    this.material = []\n    changes.push(new Update(this.id))\n\n    return changes\n  }\n}\n\nexport class FurnaceMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'FURNACE'\n  }\n\n  update () {\n    const changes = []\n    this.material.map(material => {\n      return changes.push(new TransportUpdate(this.getNextMachineId(), material.transform()))\n    })\n    this.material = []\n    changes.push(new Update(this.id))\n\n    return changes\n  }\n}\n\nexport class CrafterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'CRAFTER'\n    this.recipe = new SwordRecipe()\n  }\n\n  update () {\n    const product = this.recipe.craft(this.material)\n    if (product) {\n      this.material = []\n      return [new Update(this.id), new TransportUpdate(this.getNextMachineId(), product)]\n    }\n    return []\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { BaseMachine } from '../model/machine'\n\nimport '../styles/MachineToolbox.css'\nimport '../styles/Machine.css'\n\nvar classNames = require('classnames')\nconst constants = require('../constants')\n\nexport const MachineToolbox = ({ onSelected, selection }) => {\n  return (\n    <div className='toolbox'>\n      <h1 className='title'>Máquinas</h1>\n      <div className='items'>\n        {constants.MACHINE_TYPES.map(t => <Button type={t} selection={selection} onSelected={onSelected} />)}\n      </div>\n    </div>\n  )\n}\n\nMachineToolbox.propTypes = {\n  onSelected: PropTypes.func,\n  selection: PropTypes.object\n}\n\nconst Button = ({ type, onSelected, selection }) => {\n  const classes = {\n    btn: true,\n    selected: selection.machine && type === selection.machine.name && selection.type === 'NEW'\n  }\n\n  return (\n    <span className={classNames(classes)} onClick={() => onSelected(BaseMachine.createMachine(type))}>\n      <div className={'machine ' + type.toLowerCase()} />\n    </span>\n  )\n}\n\nButton.propTypes = {\n  onSelected: PropTypes.func,\n  type: PropTypes.string\n}\n","import { connect } from 'react-redux'\nimport { MachineToolbox } from '../components/MachineToolbox'\n\nimport { newSelection } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onSelected: machine => dispatch(newSelection(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(MachineToolbox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/Machine.css'\n\nexport const Machine = (props) => {\n  const showMaterial = () => (\n    props.machine.material.map((material) => <div className={`material ${material.name.toLowerCase()}`} >{material.content}</div>\n    )\n  )\n\n  return (\n    <div onClick={props.onClick} className={`machine ${props.machine.name.toLowerCase()} ${props.machine.orientation.toLowerCase()}`} >\n      {showMaterial()}\n    </div>\n  )\n}\n\nMachine.propTypes = {\n  machine: PropTypes.object.isRequired,\n  onClick: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Machine } from './Machine'\n\nvar classNames = require('classnames')\n\nexport const FactoryBlock = (props) => {\n  const classes = {\n    block: true,\n    selected: props.machine && props.selection.machine && props.selection.machine.id === props.machine.id\n  }\n\n  if (props.machine) {\n    return <span className={classNames(classes)}><Machine onClick={() => props.onMachineClick(props.machine)} machine={props.machine} /></span>\n  } else {\n    return <span className={classNames(classes)} onClick={() => props.onBlankClick(props.id)} />\n  }\n}\n\nFactoryBlock.propTypes = {\n  machine: PropTypes.object,\n  selection: PropTypes.object,\n  id: PropTypes.number.isRequired,\n  onBlankClick: PropTypes.func,\n  onMachineClick: PropTypes.func\n}\n","import { connect } from 'react-redux'\nimport { FactoryBlock } from '../components/FactoryBlock'\n\nimport { blankSelection, machineSelection } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onBlankClick: blockId => dispatch(blankSelection(blockId)),\n    onMachineClick: machine => dispatch(machineSelection(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(FactoryBlock)\n","import React from 'react'\nimport FactoryBlock from '../containers/FactoryBlock'\n\nimport '../styles/Factory.css'\n\nexport class Factory extends React.Component {\n  render () {\n    var classFactory = 'factory'\n    const toMove = this.props.toMove\n    if (toMove) {\n      classFactory = 'factory factory_disabled'\n    }\n\n    return (\n      <div className={classFactory}>\n        { this.props.factory.map((block, k) => <FactoryBlock machine={block} key={k} id={k} />) }\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { Factory } from '../components/Factory'\n\nconst mapStateToProps = (state) => {\n  return {\n    selected: state.selected,\n    factory: state.factory,\n    toMove: state.toMove\n  }\n}\n\nexport default connect(mapStateToProps, null)(Factory)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../styles/DetailsToolBox.css'\nimport { SwordRecipe, TrophyRecipe } from '../model/recipe'\n\nexport const DetailsToolBox = (props) => {\n  const renderButtons = () => {\n    if (props.selection && props.selection.type !== 'NEW') {\n      return (\n        <div className='buttons'>\n          <div className='btn delete' onClick={() => props.onDeleted(props.selection.machine)} />\n          <div className='btn rotate' onClick={() => props.onRotate(props.selection.machine)} />\n          <div className='btn move' onClick={() => props.onMove(props.selection.machine)} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const renderMaterialSelection = () => {\n    if (props.selection && props.selection.machine.production) {\n      return (\n        <div className='buttons-material'>\n          <div className='btn iron' onClick={() => selectMaterial('IRON')} />\n          <div className='btn diamond' onClick={() => selectMaterial('DIAMOND')} />\n          <div className='btn gold' onClick={() => selectMaterial('GOLD')} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const renderRecipeSelection = () => {\n    if (props.selection.machine) {\n      if (props.selection.machine.name === 'CRAFTER') {\n        return (\n          <div className='buttons-material'>\n            <div className='btn iron' onClick={() => selectRecipe(new SwordRecipe())} />\n            <div className='btn gold' onClick={() => selectRecipe(new TrophyRecipe())} />\n          </div>\n        )\n      }\n    } else {\n      return null\n    }\n  }\n\n  const selectMaterial = (material) => (props.selection.machine.production = material)\n  const selectRecipe = (recipe) => (props.selection.machine.recipe = recipe)\n  return (\n    <div className='details-toolbox'>\n      <h1 className='title'>Edición</h1>\n      <div className='content'>\n        <MachineDetails machine={props.selection.machine} />\n        {renderMaterialSelection()}\n        {renderRecipeSelection()}\n        {renderButtons()}\n      </div>\n    </div>\n  )\n}\n\nDetailsToolBox.propTypes = {\n  selection: PropTypes.object,\n  money: PropTypes.number,\n  onDeleted: PropTypes.func,\n  onRotate: PropTypes.func,\n  onMove: PropTypes.func\n}\n\nconst MachineDetails = (props) => {\n  if (props.machine) {\n    return (\n      <div className='machine-details'>\n        <p>MACHINE: {props.machine.name}</p>\n        {props.machine.frequency ? <p>Frecuencia: {props.machine.frequency}</p> : ''}\n        {props.machine.production ? <p>Producción: {props.machine.production}</p> : ''}\n        <p>Precio: ${props.machine.price}</p>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n","import { connect } from 'react-redux'\nimport { DetailsToolBox } from '../components/DetailsToolBox'\n\nimport { deleted, rotate, move } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onDeleted: (machine) => dispatch(deleted(machine)),\n    onRotate: (machine) => dispatch(rotate(machine)),\n    onMove: (machine) => dispatch(move(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    money: state.money,\n    toMove: state.toMove,\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(DetailsToolBox)\n","import { connect } from 'react-redux'\nimport { Money } from '../components/Money'\n\nimport '../styles/Money.css'\n\nconst mapStateToProps = (state) => {\n  return {\n    money: state.money\n  }\n}\n\nexport default connect(mapStateToProps)(Money)\n","import React from 'react'\n\nexport const Money = ({ money }) => {\n  return (\n    <div className='money'>Dinero: ${money} </div>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\n\nimport { tick } from './actions/game'\nimport MachineToolbox from './containers/MachineToolbox'\nimport Factory from './containers/Factory'\nimport DetailsToolBox from './containers/DetailsToolBox'\nimport Money from './containers/Money'\n\nclass App extends React.Component {\n  componentDidMount () {\n    setInterval(this.props.notifyTick, 1000)\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='app-title'>\n            Revolución Industrial\n          </h1>\n          <Money />\n        </header>\n        <body>\n          <MachineToolbox />\n          <Factory />\n          <DetailsToolBox />\n        </body>\n      </div>\n    )\n  }\n}\n\nconst mapActionsToProps = dispatch => {\n  return {\n    notifyTick: () => dispatch(tick())\n  }\n}\n\nexport default connect(null, mapActionsToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var globalUpdates = []\n\nconst updateMachine = (machine, id) => {\n  const changes = machine.update()\n  globalUpdates = globalUpdates.concat(changes)\n}\n\nconst apply = (state, update) => {\n  const machineTarget = state.factory[update.id]\n  if (!machineTarget) {\n    return state\n  }\n\n  if (machineTarget.profit) {\n    state.money = state.money + machineTarget.profit\n    machineTarget.profit = 0\n  }\n\n  state.factory[update.id] = update.execute(machineTarget)\n\n  return state\n}\n\nconst tick = (state) => {\n  state.factory.map((machine, id) => machine ? updateMachine(machine, id) : null)\n  const newState = globalUpdates.reduce((state, change) => apply(state, change), state)\n  globalUpdates = []\n\n  return {\n    ...state,\n    factory: newState.factory.slice(0)\n  }\n}\n\nexport const game = (state, action) => {\n  return tick(state)\n}\n","import { game } from './game'\n\nconst constants = require('../constants')\n\nconst addNewMachine = (state, blockId) => {\n  if (state.selected.type !== 'NEW') {\n    return state\n  }\n  const newMachine = state.selected.machine\n  newMachine.id = blockId\n\n  if (newMachine.price > state.money) {\n    return state\n  }\n\n  return {\n    ...state,\n    factory: state.factory.map((e, k) => k === blockId ? newMachine : e),\n    selected: { type: 'MACHINE', machine: newMachine },\n    money: state.money - newMachine.price\n  }\n}\n\nconst rotateMachine = (state, machine) => {\n  machine.rotate()\n  state.factory[machine.id] = machine.clone()\n\n  return {\n    ...state,\n    factory: state.factory.slice(0)\n  }\n}\n\nconst deleteMachine = (state, machine) => {\n  state.factory[machine.id] = null\n\n  return {\n    ...state,\n    selected: '',\n    factory: state.factory.slice(0)\n  }\n}\n\nexport const ui = (state, action) => {\n  switch (action.type) {\n    case constants.ACTION_SELECTION_NEW:\n      return {\n        ...state,\n        selected: { type: 'NEW', machine: action.machine }\n      }\n    case constants.ACTION_SELECTION_BLANK:\n      return addNewMachine(state, action.blockId)\n    case constants.ACTION_SELECTION_MACHINE:\n      return {\n        ...state,\n        selected: { type: 'MACHINE', machine: action.machine }\n      }\n    case constants.ACTION_ROTATE:\n      return rotateMachine(state, action.machine)\n    case constants.ACTION_DELETE:\n      return deleteMachine(state, action.machine)\n    case 'TICK':\n      return game(state, action)\n    case constants.ACTION_MOVE:\n      return {\n        ...state,\n        toMove: state.toMove\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { initialState } from './constants'\nimport { ui as reducer } from './reducers/ui'\n\nconst store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const FACTORY_HEIGHT = 8\nexport const FACTORY_WIDTH = 8\n\nexport const BLOCK_EMPTY = 'BLOCK_EMPTY'\nexport const MACHINE_STARTER = 'STARTER'\nexport const MACHINE_SELLER = 'SELLER'\nexport const MACHINE_TRANSPORTER = 'TRANSPORTER'\nexport const MACHINE_FURNACE = 'FURNACE'\nexport const MACHINE_CRAFTER = 'CRAFTER'\nexport const MACHINE_TYPES = [MACHINE_STARTER, MACHINE_SELLER, MACHINE_TRANSPORTER, MACHINE_FURNACE, MACHINE_CRAFTER]\n\nexport const ACTION_SELECTION_NEW = 'ACTION_SELECTION_NEW'\nexport const ACTION_SELECTION_BLANK = 'ACTION_SELECTION_BLANK'\nexport const ACTION_SELECTION_MACHINE = 'ACTION_SELECTION_MACHINE'\nexport const ACTION_DELETE = 'ACTION_DELETE'\nexport const ACTION_ROTATE = 'ACTION_ROTATE'\nexport const ACTION_MOVE = 'ACTION_MOVE'\n\nexport const STARTER_PRICE = 100\nexport const SELLER_PRICE = 250\nexport const TRANSPORTER_PRICE = 50\nexport const FURNACE_PRICE = 300\nexport const CRAFTER_PRICE = 200\n\nexport const initialState = {\n  factory: [...Array(FACTORY_HEIGHT * FACTORY_WIDTH)].map(() => null),\n  selected: '',\n  money: 1000\n}\n"],"sourceRoot":""}