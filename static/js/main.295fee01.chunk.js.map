{"version":3,"sources":["constants.js","actions/game.js","model/material.js","model/modelUpdate.js","model/recipe.js","model/machine.js","components/MachineToolbox.js","containers/MachineToolbox.jsx","components/Machine.js","components/FactoryBlock.js","containers/FactoryBlock.js","components/Factory.js","containers/Factory.js","components/DetailsToolBox.js","containers/DetailsToolBox.js","containers/Money.js","components/Money.js","App.js","serviceWorker.js","reducers/game.js","reducers/ui.js","index.js"],"names":["FACTORY_HEIGHT","FACTORY_WIDTH","BLOCK_EMPTY","MACHINE_STARTER","MACHINE_SELLER","MACHINE_TRANSPORTER","MACHINE_FURNACE","MACHINE_CRAFTER","MACHINE_TYPES","ACTION_SELECTION_NEW","ACTION_SELECTION_BLANK","ACTION_SELECTION_MACHINE","ACTION_DELETE","ACTION_ROTATE","ACTION_MOVE","STARTER_PRICE","SELLER_PRICE","TRANSPORTER_PRICE","FURNACE_PRICE","CRAFTER_PRICE","initialState","factory","Object","_home_travis_build_PracticaDS_pdes_tp_grupo1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","map","selected","money","constants","require","Material","name","classCallCheck","this","price","content","createClass","key","value","type","IronMaterial","DiamondMaterial","GoldMaterial","_Material","possibleConstructorReturn","getPrototypeOf","call","inherits","LiquidIronMaterial","_Material2","_Material3","LiquidDiamondMaterial","_Material4","_Material5","LiquidGoldMaterial","_Material6","SwordMaterial","_Material7","_this","TrophyMaterial","_Material8","_this2","RingMaterial","_Material9","_this3","Update","machineId","id","machine","clone","TransportUpdate","_Update2","material","push","SwordRecipe","ingredients","materials","filter","mat","includes","length","TrophyRecipe","RingRecipe","BaseMachine","orientation","assign","create","DOWN","RIGHT","UP","LEFT","dirs","nextDir","indexOf","StarterMachine","SellerMachine","TransporterMachine","FurnaceMachine","CrafterMachine","_BaseMachine","production","frequency","counter","getNextMachineId","createMaterial","_BaseMachine2","profit","reduce","sum","_BaseMachine3","_this4","changes","_BaseMachine4","_this5","_this6","transform","_BaseMachine5","_this7","recipe","product","craft","classNames","Button","_ref2","onSelected","selection","classes","btn","react_default","a","createElement","className","onClick","createMachine","toLowerCase","connect","state","dispatch","newSelection","_ref","t","MachineToolbox_Button","Machine","props","_classes2","defineProperty","onBlankClick","blockId","blankSelection","onMachineClick","machineSelection","block","Machine_Machine","Factory","_React$Component","apply","arguments","classFactory","toMove","k","containers_FactoryBlock","React","Component","MachineDetails","onDeleted","deleted","onRotate","rotate","onMove","move","selectRecipe","selectMaterial","DetailsToolBox_MachineDetails","App","setInterval","notifyTick","containers_Money","containers_MachineToolbox","containers_Factory","containers_DetailsToolBox","Boolean","window","location","hostname","match","globalUpdates","tick","update","concat","updateMachine","newState","change","machineTarget","execute","objectSpread","slice","store","createStore","action","newMachine","e","addNewMachine","rotateMachine","deleteMachine","changeRecipe","game","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.295fee01.chunk.js","sourcesContent":["export const FACTORY_HEIGHT = 8\nexport const FACTORY_WIDTH = 8\n\nexport const BLOCK_EMPTY = 'BLOCK_EMPTY'\nexport const MACHINE_STARTER = 'STARTER'\nexport const MACHINE_SELLER = 'SELLER'\nexport const MACHINE_TRANSPORTER = 'TRANSPORTER'\nexport const MACHINE_FURNACE = 'FURNACE'\nexport const MACHINE_CRAFTER = 'CRAFTER'\nexport const MACHINE_TYPES = [MACHINE_STARTER, MACHINE_SELLER, MACHINE_TRANSPORTER, MACHINE_FURNACE, MACHINE_CRAFTER]\n\nexport const ACTION_SELECTION_NEW = 'ACTION_SELECTION_NEW'\nexport const ACTION_SELECTION_BLANK = 'ACTION_SELECTION_BLANK'\nexport const ACTION_SELECTION_MACHINE = 'ACTION_SELECTION_MACHINE'\nexport const ACTION_DELETE = 'ACTION_DELETE'\nexport const ACTION_ROTATE = 'ACTION_ROTATE'\nexport const ACTION_MOVE = 'ACTION_MOVE'\n\nexport const STARTER_PRICE = 100\nexport const SELLER_PRICE = 250\nexport const TRANSPORTER_PRICE = 50\nexport const FURNACE_PRICE = 300\nexport const CRAFTER_PRICE = 200\n\nexport const initialState = {\n  factory: [...Array(FACTORY_HEIGHT * FACTORY_WIDTH)].map(() => null),\n  selected: '',\n  money: 1000\n}\n","const constants = require('../constants')\n\nexport const newSelection = (machine) => ({\n  type: constants.ACTION_SELECTION_NEW,\n  machine: machine\n})\n\nexport const blankSelection = (blockId) => ({\n  type: constants.ACTION_SELECTION_BLANK,\n  blockId: blockId\n})\n\nexport const machineSelection = (machine) => ({\n  type: constants.ACTION_SELECTION_MACHINE,\n  machine: machine\n})\n\nexport const deleted = (machine) => ({\n  type: constants.ACTION_DELETE,\n  machine\n})\n\nexport const rotate = (machine) => ({\n  type: constants.ACTION_ROTATE,\n  machine\n})\n\nexport const move = (machine) => ({\n  type: constants.ACTION_MOVE,\n  machine\n})\n\nexport const selectRecipe = (recipe, machineId) => ({\n  type: 'SELECT_RECIPE',\n  recipe,\n  id: machineId\n})\n\nexport const tick = () => ({ type: 'TICK' })\n","export class Material {\n  constructor (name) {\n    this.name = name\n    this.price = 100\n    this.content = ''\n  }\n\n  static createMaterial (type) {\n    switch (type) {\n      case 'IRON': return new IronMaterial()\n      case 'DIAMOND': return new DiamondMaterial()\n      case 'GOLD': return new GoldMaterial()\n      default:\n    }\n  }\n\n  transform () {\n    return this\n  }\n}\n\nexport class IronMaterial extends Material {\n  constructor () {\n    super('IRON')\n  }\n\n  transform () {\n    return new LiquidIronMaterial()\n  }\n}\n\nexport class LiquidIronMaterial extends Material {\n  constructor () {\n    super('LIQUID_IRON')\n  }\n}\n\nexport class DiamondMaterial extends Material {\n  constructor () {\n    super('DIAMOND')\n  }\n\n  transform () {\n    return new LiquidDiamondMaterial()\n  }\n}\n\nexport class LiquidDiamondMaterial extends Material {\n  constructor () {\n    super('LIQUID_DIAMOND')\n  }\n}\n\nexport class GoldMaterial extends Material {\n  constructor () {\n    super('GOLD')\n  }\n\n  transform () {\n    return new LiquidGoldMaterial()\n  }\n}\n\nexport class LiquidGoldMaterial extends Material {\n  constructor () {\n    super('LIQUID_GOLD')\n  }\n}\n\nexport class SwordMaterial extends Material {\n  constructor () {\n    super('SWORD')\n    this.content = '🗡️'\n  }\n}\n\nexport class TrophyMaterial extends Material {\n  constructor () {\n    super('Trophy')\n    this.content = '🏆'\n  }\n}\n\nexport class RingMaterial extends Material {\n  constructor () {\n    super('Ring')\n    this.content = '\\u{1F48D}'\n  }\n}\n","export class Update {\n  constructor (machineId) {\n    this.id = machineId\n  }\n\n  execute (machine) {\n    return machine.clone()\n  }\n}\n\nexport class CleanUpdate extends Update {\n  execute (machine) {\n    machine.material = []\n    return machine.clone()\n  }\n}\n\nexport class TransportUpdate extends Update {\n  constructor (machineId, material) {\n    super(machineId)\n    this.material = material\n  }\n\n  execute (machine) {\n    machine.material.push(this.material)\n    return machine.clone()\n  }\n}\n","import { SwordMaterial, TrophyMaterial, RingMaterial } from './material'\n\nexport class SwordRecipe {\n  constructor () {\n    this.name = 'SWORD'\n    this.ingredients = ['IRON', 'IRON', 'IRON']\n  }\n\n  craft (materials) {\n    const result = materials.filter(mat => this.ingredients.includes(mat.name))\n    if (result.length >= this.ingredients.length) {\n      return new SwordMaterial()\n    }\n  }\n}\n\nexport class TrophyRecipe {\n  constructor () {\n    this.name = 'TROPHY'\n    this.ingredients = ['GOLD', 'GOLD', 'GOLD']\n  }\n\n  craft (materials) {\n    const result = materials.filter(mat => this.ingredients.includes(mat.name))\n    if (result.length >= this.ingredients.length) {\n      return new TrophyMaterial()\n    }\n  }\n}\n\nexport class RingRecipe {\n  constructor () {\n    this.name = 'RING'\n    this.ingredients = ['GOLD', 'GOLD', 'DIAMOND']\n  }\n\n  craft (materials) {\n    const result = materials.filter(mat => this.ingredients.includes(mat.name))\n    if (result.length >= this.ingredients.length) {\n      return new RingMaterial()\n    }\n  }\n}\n","import { Material } from './material'\nimport { Update, TransportUpdate } from './modelUpdate'\nimport { SwordRecipe } from './recipe'\n\nexport class BaseMachine {\n  constructor (id) {\n    this.id = id\n    this.orientation = 'DOWN'\n    this.material = []\n    this.price = 100\n  }\n\n  static createMachine (type, id) {\n    switch (type) {\n      case 'STARTER': return new StarterMachine(id)\n      case 'SELLER': return new SellerMachine(id)\n      case 'TRANSPORTER': return new TransporterMachine(id)\n      case 'FURNACE': return new FurnaceMachine(id)\n      case 'CRAFTER': return new CrafterMachine(id)\n      default:\n    }\n  }\n\n  update () {\n    return []\n  }\n\n  clone () {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n  }\n\n  getNextMachineId () {\n    const dirs = { DOWN: 8, RIGHT: 1, UP: -8, LEFT: -1 }\n    return this.id + dirs[this.orientation]\n  }\n\n  rotate () {\n    const dirs = ['DOWN', 'RIGHT', 'UP', 'LEFT']\n    const nextDir = (dirs.indexOf(this.orientation) + 1) % 4\n    this.orientation = dirs[nextDir]\n  }\n}\n\nexport class StarterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'STARTER'\n    this.production = 'IRON'\n    this.frequency = 3\n    this.counter = 0\n  }\n\n  update () {\n    this.counter++\n    if (this.frequency === this.counter) {\n      this.counter = 0\n      return [new TransportUpdate(this.getNextMachineId(), Material.createMaterial(this.production))]\n    }\n\n    return []\n  }\n}\n\nexport class SellerMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'SELLER'\n    this.profit = 0\n  }\n\n  update () {\n    this.profit = this.material.reduce((sum, material) => (sum + material.price), 0)\n    this.material = []\n    return [new Update(this.id)]\n  }\n}\n\nexport class TransporterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'TRANSPORTER'\n  }\n\n  update () {\n    const changes = []\n    this.material.map(material => {\n      return changes.push(new TransportUpdate(this.getNextMachineId(), material))\n    })\n    this.material = []\n    changes.push(new Update(this.id))\n\n    return changes\n  }\n}\n\nexport class FurnaceMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'FURNACE'\n  }\n\n  update () {\n    const changes = []\n    this.material.map(material => {\n      return changes.push(new TransportUpdate(this.getNextMachineId(), material.transform()))\n    })\n    this.material = []\n    changes.push(new Update(this.id))\n\n    return changes\n  }\n}\n\nexport class CrafterMachine extends BaseMachine {\n  constructor (id) {\n    super(id)\n    this.name = 'CRAFTER'\n    this.recipe = new SwordRecipe()\n  }\n\n  update () {\n    const product = this.recipe.craft(this.material)\n    if (product) {\n      this.material = []\n      return [new Update(this.id), new TransportUpdate(this.getNextMachineId(), product)]\n    }\n    return []\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { BaseMachine } from '../model/machine'\n\nimport '../styles/MachineToolbox.css'\nimport '../styles/Machine.css'\n\nvar classNames = require('classnames')\nconst constants = require('../constants')\n\nexport const MachineToolbox = ({ onSelected, selection }) => {\n  return (\n    <div className='toolbox'>\n      <h1 className='title'>Máquinas</h1>\n      <div className='items'>\n        {constants.MACHINE_TYPES.map(t => <Button type={t} selection={selection} onSelected={onSelected} />)}\n      </div>\n    </div>\n  )\n}\n\nMachineToolbox.propTypes = {\n  onSelected: PropTypes.func,\n  selection: PropTypes.object\n}\n\nconst Button = ({ type, onSelected, selection }) => {\n  const classes = {\n    btn: true,\n    selected: selection.machine && type === selection.machine.name && selection.type === 'NEW'\n  }\n\n  return (\n    <span className={classNames(classes)} onClick={() => onSelected(BaseMachine.createMachine(type))}>\n      <div className={'machine ' + type.toLowerCase()} />\n    </span>\n  )\n}\n\nButton.propTypes = {\n  onSelected: PropTypes.func,\n  type: PropTypes.string\n}\n","import { connect } from 'react-redux'\nimport { MachineToolbox } from '../components/MachineToolbox'\n\nimport { newSelection } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onSelected: machine => dispatch(newSelection(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(MachineToolbox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/Machine.css'\n\nvar classNames = require('classnames')\n\nexport const Machine = (props) => {\n  const showMaterial = () => (\n    props.machine.material.map((material) => {\n      const classes = {\n        material: true,\n        [material.name.toLowerCase()]: true\n      }\n\n      return <div className={classNames(classes)} >\n        <span className='content'>{material.content}</span>\n      </div>\n    })\n  )\n\n  const classes = {\n    machine: true,\n    [props.machine.name.toLowerCase()]: true,\n    [props.machine.orientation.toLowerCase()]: true,\n    working: props.machine.material.length > 0\n  }\n\n  return (\n    <div onClick={props.onClick} className={classNames(classes)}>\n      {showMaterial()}\n    </div>\n  )\n}\n\nMachine.propTypes = {\n  machine: PropTypes.object.isRequired,\n  onClick: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Machine } from './Machine'\n\nvar classNames = require('classnames')\n\nexport const FactoryBlock = (props) => {\n  const classes = {\n    block: true,\n    selected: props.machine && props.selection.machine && props.selection.machine.id === props.machine.id\n  }\n\n  if (props.machine) {\n    return <span className={classNames(classes)}><Machine onClick={() => props.onMachineClick(props.machine)} machine={props.machine} /></span>\n  } else {\n    return <span className={classNames(classes)} onClick={() => props.onBlankClick(props.id)} />\n  }\n}\n\nFactoryBlock.propTypes = {\n  machine: PropTypes.object,\n  selection: PropTypes.object,\n  id: PropTypes.number.isRequired,\n  onBlankClick: PropTypes.func,\n  onMachineClick: PropTypes.func\n}\n","import { connect } from 'react-redux'\nimport { FactoryBlock } from '../components/FactoryBlock'\n\nimport { blankSelection, machineSelection } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onBlankClick: blockId => dispatch(blankSelection(blockId)),\n    onMachineClick: machine => dispatch(machineSelection(machine))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(FactoryBlock)\n","import React from 'react'\nimport FactoryBlock from '../containers/FactoryBlock'\n\nimport '../styles/Factory.css'\n\nexport class Factory extends React.Component {\n  render () {\n    var classFactory = 'factory'\n    const toMove = this.props.toMove\n    if (toMove) {\n      classFactory = 'factory factory_disabled'\n    }\n\n    return (\n      <div className={classFactory}>\n        { this.props.factory.map((block, k) => <FactoryBlock machine={block} key={k} id={k} />) }\n      </div>\n    )\n  }\n}\n","import { connect } from 'react-redux'\nimport { Factory } from '../components/Factory'\n\nconst mapStateToProps = (state) => {\n  return {\n    selected: state.selected,\n    factory: state.factory,\n    toMove: state.toMove\n  }\n}\n\nexport default connect(mapStateToProps, null)(Factory)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/DetailsToolBox.css'\n\nimport { SwordRecipe, TrophyRecipe, RingRecipe } from '../model/recipe'\n\nexport const DetailsToolBox = (props) => {\n  const renderButtons = () => {\n    if (props.selection && props.selection.type !== 'NEW') {\n      return (\n        <div className='buttons'>\n          <div className='btn delete' onClick={() => props.onDeleted(props.selection.machine)} />\n          <div className='btn rotate' onClick={() => props.onRotate(props.selection.machine)} />\n          <div className='btn move' onClick={() => props.onMove(props.selection.machine)} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const renderMaterialSelection = () => {\n    if (props.selection && props.selection.machine.production) {\n      return (\n        <div className='buttons-material'>\n          <div className='btn iron' onClick={() => selectMaterial('IRON')} />\n          <div className='btn diamond' onClick={() => selectMaterial('DIAMOND')} />\n          <div className='btn gold' onClick={() => selectMaterial('GOLD')} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  const renderRecipeSelection = () => {\n    if (props.selection.machine) {\n      if (props.selection.machine.name === 'CRAFTER') {\n        return (\n          <span>\n            <p>Recetas:</p>\n            <div className='buttons-material'>\n              <div className='btn sword' onClick={() => props.selectRecipe(new SwordRecipe(), props.selection.machine.id)} />\n              <div className='btn trophy' onClick={() => props.selectRecipe(new TrophyRecipe(), props.selection.machine.id)} />\n              <div className='btn ring' onClick={() => props.selectRecipe(new RingRecipe(), props.selection.machine.id)} />\n            </div>\n          </span>\n        )\n      }\n    } else {\n      return null\n    }\n  }\n\n  const selectMaterial = (material) => (props.selection.machine.production = material)\n\n  return (\n    <div className='details-toolbox'>\n      <h1 className='title'>Edición</h1>\n      <div className='content'>\n        <MachineDetails machine={props.selection.machine} />\n        {renderMaterialSelection()}\n        {renderRecipeSelection()}\n        {renderButtons()}\n      </div>\n    </div>\n  )\n}\n\nDetailsToolBox.propTypes = {\n  selection: PropTypes.object,\n  money: PropTypes.number,\n  onDeleted: PropTypes.func,\n  onRotate: PropTypes.func,\n  onMove: PropTypes.func,\n  selectRecipe: PropTypes.func\n}\n\nconst MachineDetails = (props) => {\n  if (props.machine) {\n    return (\n      <div className='machine-details'>\n        <p>MACHINE: {props.machine.name}</p>\n        {props.machine.frequency ? <p>Frecuencia: {props.machine.frequency}</p> : ''}\n        {props.machine.production ? <p>Producción: {props.machine.production}</p> : ''}\n        <p>Precio: ${props.machine.price}</p>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n","import { connect } from 'react-redux'\nimport { DetailsToolBox } from '../components/DetailsToolBox'\n\nimport { deleted, rotate, move, selectRecipe } from '../actions/game'\n\nconst mapActionsToProps = dispatch => {\n  return {\n    onDeleted: (machine) => dispatch(deleted(machine)),\n    onRotate: (machine) => dispatch(rotate(machine)),\n    onMove: (machine) => dispatch(move(machine)),\n    selectRecipe: (recipe, blockId) => dispatch(selectRecipe(recipe, blockId))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    money: state.money,\n    toMove: state.toMove,\n    selection: state.selected\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(DetailsToolBox)\n","import { connect } from 'react-redux'\nimport { Money } from '../components/Money'\n\nimport '../styles/Money.css'\n\nconst mapStateToProps = (state) => {\n  return {\n    money: state.money\n  }\n}\n\nexport default connect(mapStateToProps)(Money)\n","import React from 'react'\n\nexport const Money = ({ money }) => {\n  return (\n    <div className='money'>Dinero: ${money} </div>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\n\nimport { tick } from './actions/game'\nimport MachineToolbox from './containers/MachineToolbox'\nimport Factory from './containers/Factory'\nimport DetailsToolBox from './containers/DetailsToolBox'\nimport Money from './containers/Money'\n\nclass App extends React.Component {\n  componentDidMount () {\n    setInterval(this.props.notifyTick, 1000)\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='app-title'>\n            Revolución Industrial\n          </h1>\n          <Money />\n        </header>\n        <div className='container'>\n          <MachineToolbox />\n          <Factory />\n          <DetailsToolBox />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapActionsToProps = dispatch => {\n  return {\n    notifyTick: () => dispatch(tick())\n  }\n}\n\nexport default connect(null, mapActionsToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var globalUpdates = []\n\nconst updateMachine = (machine, id) => {\n  const changes = machine.update()\n  globalUpdates = globalUpdates.concat(changes)\n}\n\nconst apply = (state, update) => {\n  const machineTarget = state.factory[update.id]\n  if (!machineTarget) {\n    return state\n  }\n\n  if (machineTarget.profit) {\n    state.money = state.money + machineTarget.profit\n    machineTarget.profit = 0\n  }\n\n  state.factory[update.id] = update.execute(machineTarget)\n\n  return state\n}\n\nconst tick = (state) => {\n  state.factory.map((machine, id) => machine ? updateMachine(machine, id) : null)\n  const newState = globalUpdates.reduce((state, change) => apply(state, change), state)\n  globalUpdates = []\n\n  return {\n    ...state,\n    factory: newState.factory.slice(0)\n  }\n}\n\nexport const game = (state, action) => {\n  return tick(state)\n}\n","import { game } from './game'\n\nconst constants = require('../constants')\n\nconst addNewMachine = (state, blockId) => {\n  if (state.selected.type !== 'NEW') {\n    return state\n  }\n  const newMachine = state.selected.machine\n  newMachine.id = blockId\n\n  if (newMachine.price > state.money) {\n    return state\n  }\n\n  return {\n    ...state,\n    factory: state.factory.map((e, k) => k === blockId ? newMachine : e),\n    selected: { type: 'MACHINE', machine: newMachine },\n    money: state.money - newMachine.price\n  }\n}\n\nconst rotateMachine = (state, machine) => {\n  machine.rotate()\n  state.factory[machine.id] = machine.clone()\n\n  return {\n    ...state,\n    factory: state.factory.slice(0)\n  }\n}\n\nconst deleteMachine = (state, machine) => {\n  state.factory[machine.id] = null\n\n  return {\n    ...state,\n    selected: '',\n    factory: state.factory.slice(0)\n  }\n}\n\nconst changeRecipe = (state, recipe, machineId) => {\n  if (state.factory[machineId]) {\n    state.factory[machineId].recipe = recipe\n  }\n\n  if (state.selected.machine) {\n    state.selected.machine.recipe = recipe\n  }\n\n  return {\n    ...state,\n    factory: state.factory.slice(0)\n  }\n}\n\nexport const ui = (state, action) => {\n  switch (action.type) {\n    case constants.ACTION_SELECTION_NEW:\n      return {\n        ...state,\n        selected: { type: 'NEW', machine: action.machine }\n      }\n    case constants.ACTION_SELECTION_BLANK:\n      return addNewMachine(state, action.blockId)\n    case constants.ACTION_SELECTION_MACHINE:\n      return {\n        ...state,\n        selected: { type: 'MACHINE', machine: action.machine }\n      }\n    case constants.ACTION_ROTATE:\n      return rotateMachine(state, action.machine)\n    case constants.ACTION_DELETE:\n      return deleteMachine(state, action.machine)\n    case 'SELECT_RECIPE':\n      return changeRecipe(state, action.recipe, action.id)\n    case 'TICK':\n      return game(state, action)\n    case constants.ACTION_MOVE:\n      return {\n        ...state,\n        toMove: state.toMove\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { initialState } from './constants'\nimport { ui as reducer } from './reducers/ui'\n\nconst store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}